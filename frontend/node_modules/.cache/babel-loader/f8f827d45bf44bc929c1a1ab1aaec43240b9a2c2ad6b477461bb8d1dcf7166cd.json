{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/GaneshSurna/Desktop/react-router/React-router-SPA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/GaneshSurna/Desktop/react-router/React-router-SPA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\GaneshSurna\\\\Desktop\\\\react-router\\\\React-router-SPA\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsPage() {\n  // const {events}= useLoaderData();\n  // console.log(events); events={events}\n\n  return /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_c = EventsPage;\nexport var loader = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"http://localhost:8080/events\");\n        case 2:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 7;\n            break;\n          }\n          throw json({\n            message: \"Couldn't fetch events!\"\n          }, {\n            status: 500\n          });\n        case 7:\n          return _context.abrupt(\"return\", response);\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function loader() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","fetch","sent","ok","message","status","abrupt","stop","apply","arguments","$RefreshReg$"],"sources":["C:/Users/GaneshSurna/Desktop/react-router/React-router-SPA/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nexport default function EventsPage(){\r\n    // const {events}= useLoaderData();\r\n    // console.log(events); events={events}\r\n\r\n    return <EventsList />\r\n}\r\n\r\nexport const loader= async()=>{\r\n    const response= await fetch(\"http://localhost:8080/events\");\r\n\r\n    if(!response.ok){\r\n        throw json({message: \"Couldn't fetch events!\"},{status:500});\r\n    }\r\n\r\n    else{\r\n        // const resData = await response.json();\r\n        // return resData;\r\n        return response;\r\n    }\r\n}"],"mappings":";;;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,UAAUA,CAAA,EAAE;EAChC;EACA;;EAEA,oBAAOD,OAAA,CAACF,UAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzB;AAACC,EAAA,GALuBL,UAAU;AAOlC,OAAO,IAAMM,MAAM;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAC,QAAA;IAAA,IAAAC,QAAA;IAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACKC,KAAK,CAAC,8BAA8B,CAAC;QAAA;UAArDN,QAAQ,GAAAG,QAAA,CAAAI,IAAA;UAAA,IAEVP,QAAQ,CAACQ,EAAE;YAAAL,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACLtB,IAAI,CAAC;YAAC0B,OAAO,EAAE;UAAwB,CAAC,EAAC;YAACC,MAAM,EAAC;UAAG,CAAC,CAAC;QAAA;UAAA,OAAAP,QAAA,CAAAQ,MAAA,WAMrDX,QAAQ;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAS,IAAA;MAAA;IAAA,GAAAb,OAAA;EAAA,CAEtB;EAAA,gBAZYL,MAAMA,CAAA;IAAA,OAAAC,IAAA,CAAAkB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAYlB;AAAA,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
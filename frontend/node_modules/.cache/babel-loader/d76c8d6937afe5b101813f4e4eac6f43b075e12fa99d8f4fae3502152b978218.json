{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GaneshSurna\\\\Desktop\\\\react-router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetails.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailsPage() {\n  _s();\n  const data = useRouteLoaderData('event-details');\n  const {\n    event,\n    events\n  } = data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => {\n          return /*#__PURE__*/_jsxDEV(EventItem, {\n            event: loadedEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 28\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => {\n          return /*#__PURE__*/_jsxDEV(EventsList, {\n            events: loadedEvents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 28\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailsPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nconst loadEvent = async id => {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n};\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: \"Couldn't fetch events!\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: await loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailsPage","_s","data","event","events","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/GaneshSurna/Desktop/react-router/12-adv-starting-project/frontend/src/pages/EventDetails.js"],"sourcesContent":["\r\nimport { useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\r\n\r\nimport EventItem from '../components/EventItem';\r\nimport EventsList from '../components/EventsList';\r\nimport { Suspense } from 'react';\r\n\r\nfunction EventDetailsPage() {\r\n  const data = useRouteLoaderData('event-details');\r\n\r\n  const {event, events} = data;\r\n\r\n  return (\r\n    <>\r\n        <Suspense fallback={<main>\r\n            <p>Loading...</p>\r\n        </main>}\r\n        >\r\n            <Await resolve={event}>\r\n                {(loadedEvent)=>{\r\n                    return <EventItem event={loadedEvent} />\r\n                }}\r\n            </Await>\r\n        </Suspense>\r\n\r\n        <Suspense fallback={<main>\r\n            <p>Loading...</p>\r\n        </main>}\r\n        >\r\n            <Await resolve={events}>\r\n                {(loadedEvents)=>{\r\n                    return <EventsList events={loadedEvents} />\r\n                }}\r\n            </Await>\r\n        </Suspense>\r\n    </>\r\n  )\r\n}\r\nexport default EventDetailsPage;\r\n\r\nconst loadEvent= async (id)=>{\r\n    const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n    if (!response.ok) {\r\n        throw json(\r\n        { message: 'Could not fetch details for selected event.' },\r\n        {\r\n            status: 500,\r\n        }\r\n        );\r\n    } else {\r\n        const resData= await response.json();\r\n        return resData.event;\r\n    }\r\n};\r\n\r\nconst loadEvents= async ()=>{\r\n    const response = await fetch('http://localhost:8080/events');\r\n  \r\n          if (!response.ok){\r\n  \r\n            throw json({message:\"Couldn't fetch events!\"},{status:500});\r\n  \r\n          } else {\r\n            const resData = await response.json();\r\n            return resData.events;\r\n          }\r\n  };\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  return defer({\r\n    event: await loadEvent(id),\r\n    events: await loadEvents(),\r\n  })\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\r\n    method: request.method,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: 'Could not delete event.' },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  }\r\n  return redirect('/events');\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}